using Borlay.Iota.Library.Utils;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Borlay.Iota.Library.Tests
{
    [TestClass]
    public class PowDiverTests
    {
        [TestMethod]
        public async Task PowTest()
        {
            string intx
            string outtx
            string trunk = "NASWDKTSEESHORMTPVPEODPYSKHRTXRSIDTDVBNVOOMFLITWTTPUQCWFXRAFHFZOAVAPTBEMIGOT99999";
            string branch = "TRYBRCGMBVPYQNGQFJTOXVFKIGZGKDBBGLCISWOCKKDJMAWZAYQVWKJGXXIJQDWSLMHFZIUYRWQO99999";



            var intxTrits = Library.Crypto.Converter.GetTrits(AddAproveeTransactions(intx, trunk, branch));

            var diver = new PowDiver();
            await diver.search(intxTrits, 15, 1);

            var resultTrytes = Crypto.Converter.GetTrytes(intxTrits);

            Assert.Equals(outtx, resultTrytes);
        }

        [TestMethod]
        public async Task PowTest2()
        {
            string intx
            string outtx
            string trunk = "NASWDKTSEESHORMTPVPEODPYSKHRTXRSIDTDVBNVOOMFLITWTTPUQCWFXRAFHFZOAVAPTBEMIGOT99999";
            string branch = "TRYBRCGMBVPYQNGQFJTOXVFKIGZGKDBBGLCISWOCKKDJMAWZAYQVWKJGXXIJQDWSLMHFZIUYRWQO99999";



            var intxTrits = Library.Crypto.Converter.GetTrits(intx);//AddAproveeTransactions(intx, trunk, branch));

            var diver = new PowDiver();
            await diver.search(intxTrits, 15, 1);

            var resultTrytes = Crypto.Converter.GetTrytes(intxTrits);

            Assert.AreEqual(intx, resultTrytes);
        }

        [TestMethod]
        public async Task PowTest3()
        {
            string intx = "COGEFAUCMKPCCPXKSWDIUXRDMXYMLUQIOZGTTLLZXRXBCPETQULHNCFDKPJPKTUHRGZFWAWUBMXRZSDTWGIHDLJYRVN9TLJWWDRWALERYLBSYMGYHSJPO9ZFBFMUSAUSCRUBNKTLNRDMYUZKLQPQDCBNTSZSGYLCEQTVRHNALINLYGGYRUFPZPJPAQBORRNG9VXMUNN9PLEASIYTIMMHQHYBCRGDSGGPBRSDRUJYXQYBDJPXXUEBU9QPLMTAQTTZOLOAQI9HYOHO9XXIWMKBHRCVPLCKUTKGOMMJDIRKBLVOAYWQGFHZRBU9ANNZRPGWFMMJSATKWHXCOLFRPXICO9NNMORXJNJEWLOQBATKJPHEMUOYAWGUZH9VKYBC9VCBNTGGHRSORCEYSLORCYVAE9DBIHZVWMJHUFHPOCNSYLVSWTOUXIHRW9QVQFKOVL9COHEQQNWGRWXXIKSOSNWLDSRWQDFCSHVTPTDLDXADDOEDUANAKBHVVCHMREOMRBBNUIWBKWEBKDUCGGBJICCH9DIMNJHFYFMAELFDTMRGQYBAZHOIERHPOOGMSMHZOWUZLKCETKKGDBWEYXQUSFEAFYJJKKHBNWLVKJFVT9WVPYVEJUZELSCDUWUQYDZDCNDVRMEVQIYKLSVQHQMTR9MU9ABMCBQEUBCPMVEDJMKOEHMYNXVYXNOAITMYGNHORTRFYNJEXDWTMLGPIXQVRCFHCOQXDBXVEGMMOIMCEOKIPLENWWHTIERSTNTHODQDDXUUZCPSUEDBVWYUTZTVGIAYKFZLOXSOVCLHTVESARNLBB9FTKEXSYBNESCEZNBGBILAOLG9CZVCNSEERFKWXWDUSQYRPDSJGCB9VIFEZCZTUYMRWUSKFCZOP9SEMJYJNWLOVLCQGMEMQNIO9LNEEYHJBKXMR9HXSHEHGOVKMFHEGNASYVXITOUCKLWP9CEKSPYIFVRDDM9DONOCSUIOKC9DMGSQHBHYCOSNJSGIYNXPNCFFFSZKDRJOOCL9DSDBXREVNHBIE9WUKCXHADEPPSEKKKBEFJ9AZALBBYDFAXLVIUYIBZOXJCUSIGTUPUFACUDIGOWTVEGWEZYWUOZOXYYAMCCQLHGMPQNLRNODKODTXCIGCDQVWDFVWAAI9ZJJCB9HSNBHOXESFTWPLMZHQRIHCDIFECNVQDRWWIPEIZNURGSYALJIRKMYZGMNEZYBSRWSWNKYWIKMJMQXUZZPJQBOLHAYFGFNJEK9ZAURLVXQUDNSSXFMFFXLLAZJQJMXTRJXLLFHYRVWARVPKGGTUQCCEETQY9HYCKZWWVSQHUKTGQMWXAXJNFJJ9XBJV9JCLGDHZWFTQTEINGGKI99IWMSYCOKTXVONQYXDZKBVWXUI9IWVJKSQLDUPZTRXVLECJEEBW9VDWZBQFOHZSOQULKKQVPRHEYOPRODJAQRB9ZYNMKIHTHQXUDALEYZ9WBMDKYBXTTGEKHXOGORPRDLVOIGTYDJLTTKEBCUSCOUUJJSTSZIEXDPKOILBMZVLXUYRBRUEBF9EUYSSYLQCNBW99XTJRIQHEXAPDTSKKTEQOWKFLNNVXSWQK9MGBWYJABTJXSLJPVWCDEEXXGNOWJLSNMILAJKBMNFRTNHSJ9NSWSBESQNSUKI9AZQJBJXUTWMX9DEFRUNYIXAJAOQTXIKPCLJPNMICXQCGWJFAHNIGSDPVUZKTVBIUHQWAHCGQFVTPJLPDYSKPHD9QVSUZFCNFVKUXARYA9ONFWIFAZRPMDFKNPNAHQZLFGXZCTDUGJQ99PADJ9FWVGKBRFYECDETIQHGDTTGXVRVQCNBPJTDGTMUYZJNBAPFFFMNUVWGXQUQGEQKFZIUEAQDMIFXHQERZYMGEKHXSTMOCKSVIQGKYPFCVHOPDQYHGFDHTMKC9XMNKYZBIOQPVU9GRJIZIOVAOZVFOEINTBHGOXAEDWMSBQJWGJWNKLSJJITMUSJFTDRIUUCGJCTJINQRIQLUPDRSU9OBGWOHUSUGMDVZLMUXSPWUYSDNGQQCYITIKWXWMPVF9RHCEJIYZQUYM9PBXFEWODSKOMKXKHYSRHM9PVDHQIZKXHSJGLHXZWGIOAHEGFMJOXZPETBBXFBXRWHNVLMXQ9KEVBSXOVRABWLDFEQNHMXGAGXRAXVJL9QRKRGLBQQIJB9IWMENHAQJGRYQKPWCHICGJZXKE9GSUDXZYUAPLHAKAHYHDXNPHENTERYMMBQOPSQIDENXKLKCEYCPVTZQLEEJVYJZV9BWU999999999999999999999999999XFGE99999999999999999999999CLJMMWD99999999999A99999999VECNDLC9KX9YJCVWEVSVWQ9YPIATRAVGMBHTAGKMLEYIFOVHPHTRBMWCTLEIQPOHKQAJGN9OCVPDKTDPUSCPPYKCIEEHMARSMMXFSTEYAUBHOZKZJBLIUXUWQPBWTDHJHAOEDBZNGBBTVJLRMVWTVHCKFLIVP99999ZKQRBCTRVNWEJZOVQOJFACQYDBLTLYTNL9RHICEZGMLFRRHZEHHPXYNQXPMORPXOVGGMBPTVQPDB99999XVTQHMCABUCBNNQNFZKRHPEBZA9YEUSCLVJXJBW9GCPYESKEW9OSD9XXVKWAERTILMSELVNYDSOHYVUZO";
            string outtx = "COGEFAUCMKPCCPXKSWDIUXRDMXYMLUQIOZGTTLLZXRXBCPETQULHNCFDKPJPKTUHRGZFWAWUBMXRZSDTWGIHDLJYRVN9TLJWWDRWALERYLBSYMGYHSJPO9ZFBFMUSAUSCRUBNKTLNRDMYUZKLQPQDCBNTSZSGYLCEQTVRHNALINLYGGYRUFPZPJPAQBORRNG9VXMUNN9PLEASIYTIMMHQHYBCRGDSGGPBRSDRUJYXQYBDJPXXUEBU9QPLMTAQTTZOLOAQI9HYOHO9XXIWMKBHRCVPLCKUTKGOMMJDIRKBLVOAYWQGFHZRBU9ANNZRPGWFMMJSATKWHXCOLFRPXICO9NNMORXJNJEWLOQBATKJPHEMUOYAWGUZH9VKYBC9VCBNTGGHRSORCEYSLORCYVAE9DBIHZVWMJHUFHPOCNSYLVSWTOUXIHRW9QVQFKOVL9COHEQQNWGRWXXIKSOSNWLDSRWQDFCSHVTPTDLDXADDOEDUANAKBHVVCHMREOMRBBNUIWBKWEBKDUCGGBJICCH9DIMNJHFYFMAELFDTMRGQYBAZHOIERHPOOGMSMHZOWUZLKCETKKGDBWEYXQUSFEAFYJJKKHBNWLVKJFVT9WVPYVEJUZELSCDUWUQYDZDCNDVRMEVQIYKLSVQHQMTR9MU9ABMCBQEUBCPMVEDJMKOEHMYNXVYXNOAITMYGNHORTRFYNJEXDWTMLGPIXQVRCFHCOQXDBXVEGMMOIMCEOKIPLENWWHTIERSTNTHODQDDXUUZCPSUEDBVWYUTZTVGIAYKFZLOXSOVCLHTVESARNLBB9FTKEXSYBNESCEZNBGBILAOLG9CZVCNSEERFKWXWDUSQYRPDSJGCB9VIFEZCZTUYMRWUSKFCZOP9SEMJYJNWLOVLCQGMEMQNIO9LNEEYHJBKXMR9HXSHEHGOVKMFHEGNASYVXITOUCKLWP9CEKSPYIFVRDDM9DONOCSUIOKC9DMGSQHBHYCOSNJSGIYNXPNCFFFSZKDRJOOCL9DSDBXREVNHBIE9WUKCXHADEPPSEKKKBEFJ9AZALBBYDFAXLVIUYIBZOXJCUSIGTUPUFACUDIGOWTVEGWEZYWUOZOXYYAMCCQLHGMPQNLRNODKODTXCIGCDQVWDFVWAAI9ZJJCB9HSNBHOXESFTWPLMZHQRIHCDIFECNVQDRWWIPEIZNURGSYALJIRKMYZGMNEZYBSRWSWNKYWIKMJMQXUZZPJQBOLHAYFGFNJEK9ZAURLVXQUDNSSXFMFFXLLAZJQJMXTRJXLLFHYRVWARVPKGGTUQCCEETQY9HYCKZWWVSQHUKTGQMWXAXJNFJJ9XBJV9JCLGDHZWFTQTEINGGKI99IWMSYCOKTXVONQYXDZKBVWXUI9IWVJKSQLDUPZTRXVLECJEEBW9VDWZBQFOHZSOQULKKQVPRHEYOPRODJAQRB9ZYNMKIHTHQXUDALEYZ9WBMDKYBXTTGEKHXOGORPRDLVOIGTYDJLTTKEBCUSCOUUJJSTSZIEXDPKOILBMZVLXUYRBRUEBF9EUYSSYLQCNBW99XTJRIQHEXAPDTSKKTEQOWKFLNNVXSWQK9MGBWYJABTJXSLJPVWCDEEXXGNOWJLSNMILAJKBMNFRTNHSJ9NSWSBESQNSUKI9AZQJBJXUTWMX9DEFRUNYIXAJAOQTXIKPCLJPNMICXQCGWJFAHNIGSDPVUZKTVBIUHQWAHCGQFVTPJLPDYSKPHD9QVSUZFCNFVKUXARYA9ONFWIFAZRPMDFKNPNAHQZLFGXZCTDUGJQ99PADJ9FWVGKBRFYECDETIQHGDTTGXVRVQCNBPJTDGTMUYZJNBAPFFFMNUVWGXQUQGEQKFZIUEAQDMIFXHQERZYMGEKHXSTMOCKSVIQGKYPFCVHOPDQYHGFDHTMKC9XMNKYZBIOQPVU9GRJIZIOVAOZVFOEINTBHGOXAEDWMSBQJWGJWNKLSJJITMUSJFTDRIUUCGJCTJINQRIQLUPDRSU9OBGWOHUSUGMDVZLMUXSPWUYSDNGQQCYITIKWXWMPVF9RHCEJIYZQUYM9PBXFEWODSKOMKXKHYSRHM9PVDHQIZKXHSJGLHXZWGIOAHEGFMJOXZPETBBXFBXRWHNVLMXQ9KEVBSXOVRABWLDFEQNHMXGAGXRAXVJL9QRKRGLBQQIJB9IWMENHAQJGRYQKPWCHICGJZXKE9GSUDXZYUAPLHAKAHYHDXNPHENTERYMMBQOPSQIDENXKLKCEYCPVTZQLEEJVYJZV9BWU999999999999999999999999999XFGE99999999999999999999999CLJMMWD99999999999A99999999VECNDLC9KX9YJCVWEVSVWQ9YPIATRAVGMBHTAGKMLEYIFOVHPHTRBMWCTLEIQPOHKQAJGN9OCVPDKTDPUSCPPYKCIEEHMARSMMXFSTEYAUBHOZKZJBLIUXUWQPBWTDHJHAOEDBZNGBBTVJLRMVWTVHCKFLIVP99999ZKQRBCTRVNWEJZOVQOJFACQYDBLTLYTNL9RHICEZGMLFRRHZEHHPXYNQXPMORPXOVGGMBPTVQPDB99999XVTQHMCABUCBNNQNFZKRHPEBZA9YEUSCLVJXJBW9GCPYESKEW9OSD9XXVKWAERTILMSELVNYDSOHYVUZO";
            string trunk = "SCPPYKCIEEHMARSMMXFSTEYAUBHOZKZJBLIUXUWQPBWTDHJHAOEDBZNGBBTVJLRMVWTVHCKFLIVP99999";
            string branch = "ZKQRBCTRVNWEJZOVQOJFACQYDBLTLYTNL9RHICEZGMLFRRHZEHHPXYNQXPMORPXOVGGMBPTVQPDB99999";

            var intxTrits = Library.Crypto.Converter.GetTrits(intx);//AddAproveeTransactions(intx, trunk, branch));

            var diver = new PowDiver();
            await diver.search(intxTrits, 15, 1);

            var resultTrytes = Crypto.Converter.GetTrytes(intxTrits);

            //Assert.AreEqual(intx, resultTrytes);
        }

        [TestMethod]
        public async Task PowTest4()
        {
            string intx
            string outtx
            string trunk = "9DZFMVYCUCNZEGBKHWDGAEMSZIRCUCFUQZYYPZUBSEQQPQDYEMIWIATPBXF9EHCGOJBNQMXJIASX99999";
            string branch = "DWDRGMMCABHLQU9WSIAZJZLOMFRHEIUMRBVVSKRYRCNT9ZS9XVPQYQLH9PLMWISNBMPRIILVLIPM99999";

            var intxTrits = Library.Crypto.Converter.GetTrits(intx);//AddAproveeTransactions(intx, trunk, branch));

            var diver = new PowDiver();
            await diver.search(intxTrits, 15, 1);

            var resultTrytes = Crypto.Converter.GetTrytes(intxTrits);

            Assert.AreEqual(intx, resultTrytes);
        }

        [TestMethod]
        public async Task PowTest5()
        {
            string intx
            string outtx
            string trunk = "BLODDZEPD9NWLVQIFPHQFMFVDCCQUULAMNUHTCUNMOAZIWZWPPN9EHT9XEKQAFVMUHMNWDFK9WGE99999";
            string branch = "WBQTVAX9SRKGDAZHPXNPUERAUKSETFYM9ILJWQMSAADIFX9HQCMLTQMOSQU9NCZRTPJPZSFVNOXS99999";

            var intxTrits = Library.Crypto.Converter.GetTrits(intx);//AddAproveeTransactions(intx, trunk, branch));

            var diver = new PowDiver();
            await diver.search(intxTrits, 15, 1);

            var resultTrytes = Crypto.Converter.GetTrytes(intxTrits);

            //Assert.AreEqual(intx, resultTrytes);
        }

        public string AddAproveeTransactions(string trytes, string trunkTransaction, string branchTransaction)
        {
            var trytesConstruct = trytes.Substring(0, 2430);
            trytesConstruct += trunkTransaction;
            trytesConstruct += branchTransaction;
            trytesConstruct += EmptyHash();

            return trytesConstruct;
        }

        private string EmptyHash()
        {
            var emptyHash = new string(Enumerable.Repeat('9', 81).ToArray());
            return emptyHash;
        }


        private static int TRYTE_LENGTH = 2673;

        //[TestMethod]
        //public void testRandomTryteHash()
        //{
        //    PowDiver powDiver = new PowDiver();
        //    Curl curl = new Curl();
        //    String hash;
        //    int[] hashTrits = new int[PowDiver.CURL_HASH_LENGTH],
        //            myTrits;
        //    int i = 0,
        //    testCount = 20,
        //    minWeightMagnitude = 9,
        //    numCores = -1; // use n-1 cores

        //    String trytes = getRandomTrytes();
        //    myTrits = Converter.ToTrits(trytes);
        //    powDiver.search(myTrits, minWeightMagnitude, numCores);
        //    curl.Absorb(myTrits, 0, myTrits.Length);
        //    curl.Squeeze(hashTrits, 0, PowDiver.CURL_HASH_LENGTH);
        //    curl.Reset();
        //    hash = Converter.ToTrytes(hashTrits);
        //    bool success = isAllNines(hash.Substring(PowDiver.CURL_HASH_LENGTH / 3 - minWeightMagnitude / 3));
        //    Assert.IsTrue(success, "The hash should have n nines");

        //}

        // Remove below comment to test pearlDiver iteratively
        //[TestMethod]
        //public void testNoRandomFail()
        //{
        //    PearlDiver pearlDiver = new PearlDiver();

        //    int[] trits;
        //    Hash hash;
        //    int minWeightMagnitude = 9, numCores = -1; // use n-1 cores
        //    for (int i = 0; i++ < 10000;)
        //    {
        //        trits = TransactionViewModelTest.getRandomTransactionTrits();
        //        pearlDiver.search(trits, minWeightMagnitude, numCores);
        //        hash = Hash.calculate(trits);
        //        for (int j = Hash.SIZE_IN_TRITS; j-- > Hash.SIZE_IN_TRITS - minWeightMagnitude;)
        //        {
        //            assertEquals(hash.trits()[j], 0);
        //        }
        //        if (i % 100 == 0)
        //        {
        //            System.out.println(i + " successful hashes.");
        //        }
        //    }
        //}

        private string getRandomTrytes()
        {
            string trytes = "";
            Random rand = new Random();
            int i, r;
            for (i = 0; i < TRYTE_LENGTH; i++)
            {
                r = rand.Next(27);
                trytes += Constants.TryteAlphabet[r];
            }
            return trytes;
        }

        private bool isAllNines(string hash)
        {
            int i;
            for (i = 0; i < hash.Length; i++)
            {
                if (hash[i] != '9')
                {
                    return false;
                }
            }
            return true;
        }
    }
}
